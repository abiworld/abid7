<?php

/**
 * @file
 * Enables the use of personal and site-wide contact forms.
 */

/**
 * Implements hook_cron().
 */

function abi_members_cron() {
	$sync_url = variable_get("sync_url");
    global $user;
//	$cron_last = db_result(db_query('select timestamp from {watchdog} where type="cron" order by timestamp desc limit 1'));
    //if( date('ymd', $cron_last) != date('ymd', time() ) ){ // Once daily
		$json = file_get_contents($sync_url);
		$json = drupal_json_decode($json);
    flush_abi_data($sync_url); 
		foreach($json as $key => $value)
    {
        $node = new stdClass();
        $node->type = 'abi_members';
        $node->language        = LANGUAGE_NONE;    // Or e.g. 'en' if locale is enabled
        $node->uid          = $user->uid;
        $node->name         = $user->name;
        $node->format = 1;     // 1 means filtered html, 2 means full html, 3 is php
        $node->status = 1;     // 1 means published
        $node->promote = 0;
        node_object_prepare($node);
        $node->abi_members_json_data['und'][0]['value'] = json_encode($value);
        $latlng = get_lat_lon($value['city']."+".$value['state']);
        $node->abi_members_latitude['und'][0]['value'] = $latlng['latitude'];
        $node->abi_members_longitude['und'][0]['value'] = $latlng['longitude'];
        
        foreach($value as $key1 => $val)
        {
            drupal_set_message($val,"status");
            $var1 = 'abi_members_'.$key1;
            $node->title = 'ABI Member-['.$value["uid"].']';
            $node->{$var1}['und'][0]['value'] = check_plain($val);
            if($key1 == "additional_states"){
              $i=0;
              foreach($val as $key2 => $val2)
              {
                drupal_set_message(t($val2), 'error', FALSE);
                $node->{$var1}['und'][$i]['value'] = $val2;
                $i++;
              }
                
            }
        }
        $path = 'abi_member/'.$value['first_name']."_".$value['middle_name']."_".$value['mail'];
        $node->path = array('alias' => $path);
        node_save($node);           
    }
}
/**
 * Implements hook_menu().
 */
function abi_members_menu() {
	$items = array();

  $items['admin/settings/sync'] = array(
    'title' => 'ABI Members Sync',
    'description' => 'Description of your On this date settings page',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('abi_members_admin'),
    'access arguments' => array('administer sync settings'),
    'type' => MENU_NORMAL_ITEM,
   );
  $items['probono/import'] = array(
    'title' => 'Probono Members Import',
    'description' => 'Description of your On this date settings page',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('import_probono_members_import'),
    'access arguments' => array('administer sync settings'),
    'type' => MENU_NORMAL_ITEM,
   );
  return $items;
}

function import_probono_members_import() {
  drupal_set_title('Testing import');
  $csv_uri =  drupal_get_path('module', 'abi_members') . "/data/probono_aba.xml";
  $row = 1;
  /*
        Org_Name
        Contact
        Mailing_Address
        Mailing_Sub
        City
        State
        Zip
        Physical_Address
        City2
        State2
        Zip2
        Toll_Free_Number
        Local_Number
        Fax
        Email
        Website
        Chapters_Handled
        Eligibility_Guidelines
        Limitations
        Representation_By_Attys
        Type_Of_Representation
        Credit_Counseling_Arranged
        Debtor_Education_Arranged
        Court_Fee_Waviers_Prepared_Only_7
        Other_Services
        Date_Updated

  */
 if (file_exists(drupal_get_path('module', 'abi_members') . '/data/probono_aba.xml')) {
    $xml = simplexml_load_file(drupal_get_path('module', 'abi_members') . '/data/probono_aba.xml'); 
  } 
  $data = drupal_json_decode(drupal_json_encode($xml)); 
  //var_dump($data['database']['table']);
  $i=0;
  foreach($data['database']['table'] as $key =>$item){
    for($i=1;$i<=26;$i++)
    {
      echo "<br>".$item['column'][$i];
       /*var_dump($item);
      $node = new stdClass();
      $node->type = 'probono_members';
      $node->language        = LANGUAGE_NONE;    // Or e.g. 'en' if locale is enabled
      $node->uid          = $user->uid;
      $node->name         = $user->name;
      $node->format = 1;     // 1 means filtered html, 2 means full html, 3 is php
      $node->status = 1;     // 1 means published
      $node->promote = 0;
      node_object_prepare($node);
      $node->abi_members_longitude['und'][0]['value'] = $latlng['longitude'];
      $path = 'probono_member/'.$item['column']['1'].$item['column']['26'];
      $node->path = array('alias' => $path);
     // node_save($node);           
    $data1[$i]['org_name'] = $item['column']['1'];*/
    }
   echo "<hr>";
  }
  //var_dump($data1);

}
/*
*
* This will flush all the data once a day to keep 
* all data upto date from IMIS
*
*
*
*/
function abi_members_admin() {
  $form = array();

  $form['sync_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Sync Url'),
    '#default_value' => variable_get('sync_url', 'http://evgeny:d3c240a3968def7d71649fefaad5b88673912618@www.abiworld.org/WebServices/Consumer.cfc?method=fetchConsumerLawyerList&strState=VA'),
    '#size' => 255,
    '#maxlength' => 255,
    '#description' => t("The Sync URL for the JSON Call."),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

/*
*
* This function will delete all the records and reimport to keep in sync
*
*
*
*
*
*/


function flush_abi_data($url_pass)
{
   // echo $url_pass;
    $parts = parse_url($url_pass);
   
    $params = explode("&",$parts['query']);
    $paramval = explode("=",$params[1]);
   
    $nids = array();
    $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
        $subsql = 'SELECT entity_id FROM {field_data_abi_members_state} f WHERE f.abi_members_state_value = :state';
        $res = db_query($subsql, array(':state' => $paramval[1]));

        foreach ($res as $r)
        {
          $nids[] = $r->entity_id;
        }
      // delete all the nodes at once
      node_delete_multiple($nids);

}

function get_lat_lon($citystate){
  drupal_set_message(t($citystate), 'status', FALSE);
  $url = "http://maps.googleapis.com/maps/api/geocode/json?address=".$citystate."&sensor=true";
  $ch = curl_init();
 curl_setopt($ch, CURLOPT_URL, $url);
 curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
 $response = json_decode(curl_exec($ch), true);

 // If Status Code is ZERO_RESULTS, OVER_QUERY_LIMIT, REQUEST_DENIED or INVALID_REQUEST
 if ($response['status'] != 'OK') {
  return null;
 }

 
 $geometry = $response['results'][0]['geometry'];

  $longitude = $geometry['location']['lat'];
  $latitude = $geometry['location']['lng'];

  $array = array(
      'latitude' => $geometry['location']['lat'],
      'longitude' => $geometry['location']['lng'],
      'location_type' => $geometry['location_type'],
  );

  return $array;
}